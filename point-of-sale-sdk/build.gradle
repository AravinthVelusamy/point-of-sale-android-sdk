/*
 * Copyright (C) 2016 Square, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

version rootProject.ext.VERSION_NAME
group rootProject.ext.GROUP

apply plugin: 'maven-publish'
apply plugin: 'com.android.library'

def gitSha() {
  return 'git rev-parse --short HEAD'.execute().text.trim()
}

dependencies {
  annotationProcessor 'com.google.auto.value:auto-value:1.4.1'
  annotationProcessor 'com.ryanharter.auto.value:auto-value-gson:0.5.0'
  annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.5'

  compile 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.5'
  compile 'com.android.support:support-annotations:25.3.0'

  provided 'com.jakewharton.auto.value:auto-value-annotations:1.4'
  provided 'com.ryanharter.auto.value:auto-value-gson:0.5.0'

  testCompile 'org.robolectric:robolectric:3.0'
  testCompile 'org.mockito:mockito-core:1.10.19'
  testCompile 'org.assertj:assertj-core:1.7.1'
}

android {
  resourcePrefix 'point_of_sale_sdk_'
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    buildConfigField "String", "LIBRARY_VERSION", "\"${rootProject.ext.VERSION_NAME}\""
    buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
    consumerProguardFiles 'consumer-proguard-rules.pro'
  }
}

apply from: rootProject.file('gradle/checkstyle.gradle')
apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
